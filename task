Q#1: Write a function that will take an array as input, sort, and return the array in descending  order. For example, if the array is [3,2,7,4,6,9] the result should be [9,7,6,4,3,2].

const sortArrayDesc = (array) => {
  let n = array.length;
  for (let i = 0; i < n - 1; i++) {
    for (let j = 0; j < n - 1 - i; j++) {
      if (array[j] < array[j + 1]) {
        let temp = array[j];
        array[j] = array[j + 1];
        array[j + 1] = temp;
      }
    }
  }
  return array;
};

const array = [3, 2, 7, 4, 6, 9];
const sortedArray = sortArrayDesc(array);
console.log(sortedArray);




Q#2: Write a function that will take a string as input, check and return if it is palindrome or  not. For example, if the string is “madam” the function should return true and if the string  is “doctor” it should return false

const isPalindrome = (str) => {
  let cleanedStr = '';
  for (let i = 0; i < str.length; i++) {
    // Only include alphanumeric characters
    if ((str[i] >= 'a' && str[i] <= 'z') || (str[i] >= 'A' && str[i] <= 'Z') || (str[i] >= '0' && str[i] <= '9')) {
      cleanedStr += str[i].toLowerCase();
    }
  }

  let left = 0;
  let right = cleanedStr.length - 1;

  while (left < right) {
    if (cleanedStr[left] !== cleanedStr[right]) {
      return false;
    }
    left++;
    right--;
  }

  return true;
};

console.log(isPalindrome("madam"));
console.log(isPalindrome("doctor"));




Q#3: Write a function that will take an array as input and return the sum of the two largest  numbers in a n array. For example, in the array [3,7,1,5,11,19] the result would be 30  because 11 and 19 are the largest numbers. 

  const sumOfTwoLargest = (arr) => {
  let firstLargest = -Infinity;
  let secondLargest = -Infinity;
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] > firstLargest) {
      secondLargest = firstLargest;
      firstLargest = arr[i];
    } else if (arr[i] > secondLargest) secondLargest = arr[i];
  
  }
  return firstLargest + secondLargest;
};
const array = [3, 7, 1, 5, 11, 19];
const result = sumOfTwoLargest(array);
console.log(result);



Q#4: Write a function that will take an array as input and return an array with every missing  element from 0 to the highest entry. For example, in an array [3,4,9,1,7,3,2,6] the highest  entry is 9, and missing numbers are [0,5,8]  

const findMissingNumbers = (arr) => {
  let highest = arr[0];
  for (let i = 1; i < arr.length; i++) {
    if (arr[i] > highest) highest = arr[i];
  }
  const present = new Array(highest + 1).fill(false);
  for (let i = 0; i < arr.length; i++) {
    present[arr[i]] = true;
  }
  const missingNumbers = [];
  for (let i = 0; i <= highest; i++) {
    if (!present[i]) missingNumbers.push(i);
  }
  return missingNumbers;
};

const array = [3, 4, 9, 1, 7, 3, 2, 6];
const result = findMissingNumbers(array);
console.log(result); //Output of given Input: [0, 5, 8]




Q#5: Write a function that will take an array of numbers and return the number most repeated  in the array with how many times it was repeated. For example, if the array is  [4,3,5,6,4,7,9,2,4,6,3,4,6,3,4,8,5,1,5] the function should return 4 is repeated 5 times. 

  const mostRepeatedNumber = (arr) => {
  const counts = {};
  for (let i = 0; i < arr.length; i++) {
    const num = arr[i];
    if (counts[num] === undefined) counts[num] = 1;
      else counts[num]++;
  }

  let max = 0, mostRepeated = arr[0];
  for (const num in counts) {
    if (counts[num] > max) {
      max = counts[num];
      mostRepeated = parseInt(num);
    }
  }

  return `${mostRepeated} is repeated for ${max} times.`;
};

const array = [4, 3, 5, 6, 4, 7, 9, 2, 4, 6, 3, 4, 6, 3, 4, 8, 5, 1, 5], result = mostRepeatedNumber(array);
console.log(result);




Q#6: Write a function that will take an array as input, it will rotate the array to the right 1 time  

const rotateArrayRight = (arr) => {
  const lastElement = arr[arr.length - 1];
  for (let i = arr.length - 1; i > 0; i--) {
    arr[i] = arr[i - 1];
  }
  arr[0] = lastElement;
  return arr;
};

const array = [3, 7, 1, 5, 11, 19];
const result = rotateArrayRight(array);
console.log(result);
